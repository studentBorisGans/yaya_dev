syntax = "proto3";
import "google/protobuf/timestamp.proto";

message EventData {
  int32 org_id = 1;
  int32 venue_id = 2;
  bool published = 3;
  bool tagged_bool = 4;
  string name = 5;
  google.protobuf.Timestamp date = 6;
  float budget = 7;
  optional string pre_event_poster = 8;
  optional string pre_bio = 9;
}

message CreateEventRequest {
  EventData data = 1;
}


enum Gender {
    Male = 0;
    Female = 1;
    Other = 2;
}

enum SpendClass {
    A = 0;
    B = 1;
    C = 2;
    D = 3;
    E = 4;
    NA = 5;
}

message UserData {
  string username = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string location = 5;
  string language = 6;
  Gender gender = 7;
  int32 age = 8;
  optional SpendClass spend_class = 9;
  bool music_service = 10;
  string pw = 11;
}

message CreateUserRequest {
  UserData data = 1;
}


message Socials {
    optional string website = 1;
    optional string soundcloud = 2;
    optional string spotify = 3;
    optional string facebook = 4;
    optional string instagram = 5;
    optional string snapchat = 6;
    optional string x = 7;
}

message DJData {
  string dj_name = 1;
  string first_name = 2;
  string last_name = 3;
  string bio = 4;
  string location = 5;
}

message newDJData {
  string dj_name = 1;
  string first_name = 2;
  string last_name = 3;
  string bio = 4;
  string location = 5;
  string email = 6;
  string phone = 7;
}

message CreateDJRequest {
  newDJData data = 1;
  optional Socials social_data = 2;
}


message VenueData {
  string venue_name = 1;
  int64 venue_capacity = 2;
  string venue_address = 3;
  string venue_city = 4;
  string venue_state = 5;
  string venue_zip = 6;
  string venue_country = 7;
  int32 table_count = 8;
}

message CreateVenueRequest {
  VenueData data = 1;
}

message OrganizerData {
  string org_name = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string phone = 5;
  string country = 6;
  string website = 7;
}

message CreateOrganizerRequest {
  OrganizerData data = 1;
}

service WriteService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEntityResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateEntityResponse);
  rpc CreateDj(CreateDJRequest) returns (CreateEntityResponse);
  rpc CreateVenue(CreateVenueRequest) returns (CreateEntityResponse);
  rpc CreateOrganizer(CreateOrganizerRequest) returns (CreateEntityResponse);

}

message CreateEntityResponse {
  bool success = 1;
  string message = 2;
}